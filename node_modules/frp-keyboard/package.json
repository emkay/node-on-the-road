{
  "name": "frp-keyboard",
  "version": "1.4.1",
  "description": "An FRP implementation of Elm.Keyboard in JS",
  "keywords": [],
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Raynos/frp-keyboard.git"
  },
  "main": "index",
  "homepage": "https://github.com/Raynos/frp-keyboard",
  "bugs": {
    "url": "https://github.com/Raynos/frp-keyboard/issues",
    "email": "raynos2@gmail.com"
  },
  "contributors": [
    {
      "name": "Raynos"
    }
  ],
  "dependencies": {
    "dom-delegator": "^7.2.0",
    "global": "^4.2.1",
    "individual": "^2.0.0",
    "observ": "^0.1.5"
  },
  "devDependencies": {
    "coveralls": "^2.10.0",
    "istanbul": "^0.2.7",
    "jshint": "^2.5.0",
    "opn": "^0.1.1",
    "pre-commit": "0.0.7",
    "run-browser": "^1.3.0",
    "synthetic-dom-events": "git://github.com/Raynos/synthetic-dom-events",
    "tap-spec": "^0.1.8",
    "tape": "^2.12.3"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/Raynos/frp-keyboard/raw/master/LICENSE"
    }
  ],
  "scripts": {
    "test": "npm run jshint -s && NODE_ENV=test node test/index.js | tap-spec",
    "unit-test": "NODE_ENV=test node test/index.js | tap-spec",
    "jshint-pre-commit": "jshint --verbose $(git diff --cached --name-only | grep '\\.js$')",
    "jshint": "jshint --verbose .",
    "cover": "istanbul cover --report none --print detail test/index.js",
    "view-cover": "istanbul report html && opn ./coverage/index.html",
    "travis": "npm run cover -s && istanbul report lcov && ((cat coverage/lcov.info | coveralls) || exit 0)",
    "phantom": "run-browser test/index.js -b | tap-spec",
    "browser": "run-browser test/index.js"
  },
  "engine": {
    "node": ">= 0.8.x"
  },
  "pre-commit": [
    "jshint-pre-commit",
    "unit-test"
  ],
  "pre-commit.silent": true,
  "ngen-version": "4.0.1",
  "readme": "# frp-keyboard\n\n<!--\n    [![build status][build-png]][build]\n    [![Coverage Status][cover-png]][cover]\n    [![Davis Dependency status][dep-png]][dep]\n-->\n\n<!-- [![NPM][npm-png]][npm] -->\n\n<!-- [![browser support][test-png]][test] -->\n\nAn FRP implementation of Elm.Keyboard in JS\n\n## Example\n\n```js\nvar Keyboard = require(\"frp-keyboard\");\n\nvar keyboard = Keyboard()\n\nkeyboard.wasd(function (coords) {\n  console.log('x', coords.x, 'y', coords.y)\n})\n\n// keys is an Array<Number>\nkeyboard.keysDown(function (keys) {\n  console.log('keys down', keys)\n})\n```\n\n## Docs\n\n### `var keyboard = Keyboard()`\n\n```ocaml\nimport { Observ } from 'observ'\n\ntype KeyCode := Number\ntype Direction = 'left' | 'right' | 'up' | 'down' | 'void'\ntype Coord := {\n    x: Number,\n    y: Number,\n    lastPressed: Direction\n}\n\nfrp-keyboard := () => {\n    arrows: Observ<Coord>,\n    wasd: Observ<Coord>,\n    ctrl: Observ<Boolean>,\n    shift: Observ<Boolean>,\n    isDown: (keyCode: KeyCode) => Observ<Boolean>,\n    keysDown: Observ<Array<keyCode: KeyCode>>,\n    lastPressed: Observ<keyCode: KeyCode>,\n    directions: (\n        up: KeyCode, down: KeyCode, left: KeyCode, right: KeyCode\n    ) => Observ<Coord>\n}\n```\n\n`Keyboard()` returns a `keyboard` object with a set of\n  observables and functions over observables.\n\nA lot of the values in `frp-keyboard` are instances of `Observ`\n  from the [`'observ'`][observ] module\n\n#### `keyboard.arrows`\n\n`keyboard.arrows` is an observable that contains the state of\n  the arrow keys as a tuple `{ x: Number, y: Number }`\n\nYou can read from `keyboard.arrows` by calling it as a function\n  with an optional listener function\n\n```js\nvar currentX = keyboard.arrows().x\n\nkeyboard.arrows(function (tuple) {\n  console.log('x', tuple.x)\n})\n```\n\n`keyboard.arrows` also has a `.lastPressed` property on the\n  returned co-ordinate so you can determine whether a diagonal\n  state of `{ x: 1, y: 1 }` was up, right or right, up\n\n#### `keyboard.wasd`\n\nJust like `keyboard.arrows`, it allows you to read the state of\n  the `wasd` keys instead.\n\n#### `keyboard.directions(up, down, left, right)`\n\nIf you want to define your own set of direction keys you can\n  use the `directions()`. This will return an observable that\n  returns the `{ x: Number, y: Number }` tuple.\n\n```js\nvar hjkl = keyboard.directions(\n  74, // j\n  75, // k\n  72, // h\n  76  // l\n)\n\nhjkl(function (coords) {\n  console.log('coords.x', coords.x, 'coords.y', coords.y)\n})\n```\n\n#### `keyboard.ctrl` and `keyboard.shift`\n\n`keyboard.ctrl` and `keyboard.shift` are observable booleans\n  that tell you whether ctrl and shift are pressed down.\n\n#### `var xDown = keyboard.keyDown(Number)`\n\n`keyDown()` returns an observable boolean that tells you whether\n  said key is down.\n\nYou pass `keyDown` a numeric value that matches the `keyCode`\n\nYou can find a list of what the numeric key codes are \n  [on MDN][mdn]\n\n#### `keyboard.keysDown`\n\n`keysDown` is an observable containing an array of key codes.\n\nThe `keysDown` observable represents the lists of keys that\n  are currently being pressed down.\n\n```js\nvar computed = require('observ/computed')\nvar Keyboard = require('frp-keyboard')\nvar keyboard = Keyboard()\n\nvar keysDown = keyboard.keysDown\n\nvar isEnter = computed([keysDown], function (keysDown) {\n  return keysDown.some(function (keyCode) {\n    return keyCode === 13 // ENTER\n  })\n})\n```\n\n#### `keyboard.lastPressed`\n\n`lastPressed` is an observable that contains the last keycode\n  that was pressed by the user.\n\n## Installation\n\n`npm install frp-keyboard`\n\n## Tests\n\n`npm test`\n\n## Contributors\n\n - Raynos\n\n## MIT Licenced\n\n  [build-png]: https://secure.travis-ci.org/uber/frp-keyboard.png\n  [build]: https://travis-ci.org/uber/frp-keyboard\n  [cover-png]: https://coveralls.io/repos/uber/frp-keyboard/badge.png\n  [cover]: https://coveralls.io/r/uber/frp-keyboard\n  [dep-png]: https://david-dm.org/uber/frp-keyboard.png\n  [dep]: https://david-dm.org/uber/frp-keyboard\n  [test-png]: https://ci.testling.com/uber/frp-keyboard.png\n  [tes]: https://ci.testling.com/uber/frp-keyboard\n  [npm-png]: https://nodei.co/npm/frp-keyboard.png?stars&downloads\n  [npm]: https://nodei.co/npm/frp-keyboard\n  [observ]: https://github.com/Raynos/observ\n  [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent\n",
  "readmeFilename": "README.md",
  "_id": "frp-keyboard@1.4.1",
  "_shasum": "ae02f466ea1424d1ae76cace9f8b7f18d2777fdf",
  "_from": "frp-keyboard@^1.4.1",
  "_resolved": "https://registry.npmjs.org/frp-keyboard/-/frp-keyboard-1.4.1.tgz"
}
